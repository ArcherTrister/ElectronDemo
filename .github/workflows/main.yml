# main.yml

# Workflow's name
name: Build Electron App For Win/Mac

# Workflow's trigger
on:
  push:
    tags:
      - 'v*.*.*'

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron app
    
    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}
    
    # create a build matrix for jobs
    strategy:
      matrix:
        os: [windows-2019, windows-latest]
        # os: [windows-2019, macos-10.15]
        # ubuntu-latest，ubuntu-18.04 或 ubuntu-16.04
        # windows-latest，windows-2019 或 windows-2016
        # macOS-latest 或 macOS-10.14

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install
      # step4: build
      - name: create build
        run: |
          npm run build
      # step5: cleanup in dist_electron
      - name: clean dist folder
        run: |
          npm run clean:dist
      # step6: build app for mac/win
      - name: build windows x64 app
        if: matrix.os == 'windows-2019'
        run: |
          npm run dist:win:x64
      
      - name: build windows x86 app
        if: matrix.os == 'windows-latest'
        run: |
          npm run dist:win:ia32
      - name: build mac app
        if: matrix.os == 'macos-10.15'
        run: |
          npm run dist:mac
      # step5: cleanup artifacts in dist_electron
      # - name: cleanup artifacts for windows
      #   if: matrix.os == 'windows-2019'
      #   run: |
      #     npx rimraf "dist/!(*.exe)"

      # - name: cleanup artifacts for macos
      #   if: matrix.os == 'macos-10.15'
      #   run: |
      #     npx rimraf "dist_electron/!(*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBRELEASETOKEN }}
